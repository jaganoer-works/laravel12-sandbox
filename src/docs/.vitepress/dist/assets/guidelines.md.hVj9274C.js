import{_ as s,c as a,o as l,ae as n}from"./chunks/framework.Dh1jimFm.js";const c=JSON.parse('{"title":"開発ガイドライン","description":"","frontmatter":{},"headers":[],"relativePath":"guidelines.md","filePath":"guidelines.md"}'),t={name:"guidelines.md"};function e(p,i,h,r,o,k){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="開発ガイドライン" tabindex="-1">開発ガイドライン <a class="header-anchor" href="#開発ガイドライン" aria-label="Permalink to &quot;開発ガイドライン&quot;">​</a></h1><h2 id="コーディング規約" tabindex="-1">コーディング規約 <a class="header-anchor" href="#コーディング規約" aria-label="Permalink to &quot;コーディング規約&quot;">​</a></h2><h3 id="phpコーディング規約" tabindex="-1">PHPコーディング規約 <a class="header-anchor" href="#phpコーディング規約" aria-label="Permalink to &quot;PHPコーディング規約&quot;">​</a></h3><ol><li><p><strong>PSR-12</strong>に準拠</p><ul><li>クラス名: PascalCase</li><li>メソッド名: camelCase</li><li>変数名: camelCase</li><li>定数: UPPER_CASE</li></ul></li><li><p><strong>型宣言</strong>の使用</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUserById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $id)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">User</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>DocBlock</strong>の記述</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * ユーザーを検索する</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> $id ユーザーID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> User</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div></li></ol><h3 id="gitワークフロー" tabindex="-1">Gitワークフロー <a class="header-anchor" href="#gitワークフロー" aria-label="Permalink to &quot;Gitワークフロー&quot;">​</a></h3><ol><li><p><strong>ブランチ命名規則</strong></p><ul><li>機能開発: <code>feature/機能名</code></li><li>バグ修正: <code>fix/問題の概要</code></li><li>リファクタリング: <code>refactor/対象の概要</code></li></ul></li><li><p><strong>コミットメッセージ</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feat: 新機能の追加</span></span>
<span class="line"><span>fix: バグ修正</span></span>
<span class="line"><span>docs: ドキュメントのみの変更</span></span>
<span class="line"><span>style: コードスタイルの修正</span></span>
<span class="line"><span>refactor: リファクタリング</span></span>
<span class="line"><span>test: テストの追加・修正</span></span>
<span class="line"><span>chore: ビルドプロセスやツールの変更</span></span></code></pre></div></li></ol><h2 id="テストガイドライン" tabindex="-1">テストガイドライン <a class="header-anchor" href="#テストガイドライン" aria-label="Permalink to &quot;テストガイドライン&quot;">​</a></h2><ol><li><p><strong>ユニットテスト</strong></p><ul><li>各クラスの基本機能をテスト</li><li>モックを活用して依存を分離</li><li>テストメソッド名は目的が明確に</li></ul></li><li><p><strong>フィーチャーテスト</strong></p><ul><li>主要な機能の統合テスト</li><li>実際のデータベースを使用</li><li>ユーザーストーリーベース</li></ul></li><li><p><strong>テストカバレッジ</strong></p><ul><li>目標カバレッジ: 80%以上</li><li>重要なビジネスロジック: 100%</li></ul></li></ol><h2 id="セキュリティガイドライン" tabindex="-1">セキュリティガイドライン <a class="header-anchor" href="#セキュリティガイドライン" aria-label="Permalink to &quot;セキュリティガイドライン&quot;">​</a></h2><ol><li><p><strong>入力バリデーション</strong></p><ul><li>全てのユーザー入力を検証</li><li>XSS対策の実施</li><li>SQLインジェクション対策</li></ul></li><li><p><strong>認証・認可</strong></p><ul><li>適切なミドルウェアの使用</li><li>パーミッションの明確な定義</li><li>セッション管理の適切な実装</li></ul></li><li><p><strong>データ保護</strong></p><ul><li>機密情報の暗号化</li><li>環境変数の適切な管理</li><li>ログ出力時の機密情報除外</li></ul></li></ol><h2 id="パフォーマンス最適化" tabindex="-1">パフォーマンス最適化 <a class="header-anchor" href="#パフォーマンス最適化" aria-label="Permalink to &quot;パフォーマンス最適化&quot;">​</a></h2><ol><li><p><strong>データベース</strong></p><ul><li>インデックスの適切な設定</li><li>N+1問題の回避</li><li>クエリの最適化</li></ul></li><li><p><strong>キャッシュ戦略</strong></p><ul><li>Redisの効果的な活用</li><li>キャッシュの適切な無効化</li><li>キャッシュキーの命名規則</li></ul></li><li><p><strong>アセット管理</strong></p><ul><li>適切なアセットのバンドル</li><li>画像の最適化</li><li>CDNの活用</li></ul></li></ol>`,12)]))}const g=s(t,[["render",e]]);export{c as __pageData,g as default};
